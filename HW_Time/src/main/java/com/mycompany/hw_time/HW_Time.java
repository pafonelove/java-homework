/*
    Необходимо разработать сущность Время, которое будет описывать текущее время суток в 24-х часовом формате
    	Время описывается числом секунд, прошедшим с начала суток. Время может быть приведено к текстовой форме следующего формата: “ЧЧ:ММ:СС”.
    	Например, если время задано как 12000, то текстовая форма будет “3:20:00”.
    Создание времени можно выполнить следующими способами:
•		Время можно создать указав количество секунд с начала суток. 
•		Время можно создать указав количество часов, минут, секунд текущего времени.
    Времени может возвращать следующие сведения:
•		Какой сейчас час (целое число)
•		Сколько минут прошло с начала текущего часа (целое число)
•		Сколько секунд прошло с начала текущей минуты (целое число)
•		Сколько секунд прошло с начала суток
    Гарантируйте, что значение, хранящееся в поле данного класса всегда будет обозначать время прошедшее с начала суток.
    	В случае если при создании объекта вводится слишком большое число, все что превышает 24 часа отбрасывается. 
    Необходимо выполнить следующее:
•		Создайте 10 секунд
•		Создайте 100000 секунд
•		2 часа, 3 минуты, 5 секунд
•		Выведите на экран сколько часов соответствуют времени 34056
•		Выведите на экран сколько минут соответствуют времени 4532


*/

package com.mycompany.hw_time;

//Класс для создания сущностей Time.
class Time {
    int data;   	// входные данные, разделяющиеся на часы, минуты и секунды (для конструктора № 1)
    int hours;		// часы
    int minutes;	// минуты
    int seconds;	// секунды
   
    // Конструктор класса для создания сущности через ввод секунд.
    Time (int data) {
        this.data = data;
    }
    
    // Конструктор класса для создания сущности через ввод часов, минут, секунд.
    Time (int hours, int minutes, int seconds) {
        this.hours = hours;
        this.minutes = minutes;
        this.seconds = seconds;
    }
    
    // Проверка времени (если введено больше 24 часов, то выводится только время новых суток).
    public int CheckNextDay() {
        if (data > 86400) {
            return data -= 86400;
        }
        
        return data;
    }
    
    // Вычисление введенного времени.
    public void SolveTime() {
        CheckNextDay();     // проверка на наличие новых суток (if Hours > 24)
        
        if (data <= 0) {    // если экземпляр класса создавался через конструктор № 2, выходим из метода
            return;
        }
                            // иначе раскладываем входные данные на часы, минуты, и секунды
        while (data >= 3600) {
        	hours++;
            data -= 3600;
        }
        
        while (data >= 60) {
            minutes++;
            data -= 60;
        }
        
        seconds = data;
    }
    
    // Метод вычисления общего количества минут от введеных данных в секундах (например, если хотим узнать, сколько минут в 5000 секундах).
    public int SolveMinutes() {
        while (data > 0) {
            minutes++;
            data -= 60;
        }
        
        return minutes;
    }
    
    // Метод отображения часов.
    public void PrintHours() {
        System.out.println("Сейчас " + hours + " час(ов).");
    }
    
    // Метод отображения минут, прошедших с начала текущего часа.
    public void PrintMinutes() {
        System.out.println("С начала текущего часа прошло " + minutes + " минут(ы).");
    }
    
    // Метод отображения секунд, прошедших с начала суток.
    public void PrintSeconds() {
        if (data == 0) {    // если экземпляр класса создавался через конструктор № 2, то собираем все данные в поле Data
        	data += (hours * 3600) + (minutes * 60) + seconds;
        }
        System.out.println("С начала суток прошло " + data + " секунд.");
    }
    
    // Метод отображения времени.
    public void PrintTime() {
        {
            System.out.format("%02d" + ":" + "%02d" + ":" + "%02d", hours, minutes, seconds);
            System.out.println();
        }
    }
}

public class HW_Time {

    public static void main(String[] args) {
        Time t1 = new Time(10);
        Time t2 = new Time(100000);
        Time t3 = new Time(2, 3, 5);
    
        t3.PrintTime();
        t3.PrintHours();
        t3.PrintMinutes();
        t3.PrintSeconds();
        
        Time t4 = new Time(34056);
        t4.SolveTime();
        System.out.println("34056 секундам соответствует " + t4.hours + " часов");

        Time t5 = new Time(4532);
        System.out.println("4532 секундам соответствует " + t5.SolveMinutes() + " минут");
    }
}
