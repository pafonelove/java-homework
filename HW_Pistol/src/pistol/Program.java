/*
 *  Необходимо разработать сущность Пистолет, которая описывается следующим образом:
•	Имеет Количество патронов (целое число)
•	Может быть создан с указанием начального количества патронов
•	Может быть создан без указания начального количества патронов, в этом случае он изначально заряжен пятью патронами.
•	Может Стрелять, что приводит к выводу на экран текста “Бах!” в том случае, если количество патронов больше нуля, иначе делает “Клац!”.
		После каждого выстрела (когда вывелся “Бах!”)	 количество патронов уменьшается на один. 
•	Имеет максимальное количество патронов. Максимальное количество устанавливается во время создания пистолета и не может быть изменено позднее.
		У пистолета можно узнать, какое максимальное количество он вмещает.
•	Может быть перезаряжен. Для перезарядки необходимо передать пистолету число, которое будет означать количество заряжаемых патронов.
		Если передано отрицательное число, необходимо выбросить ошибку, объясняющую, что отрицательного числа патронов быть не может.
		Если передано слишком большое число патронов – необходимо лишние вернуть.
•	Может быть разряжен. Это приводит к обнулению патронов в пистолете и возврате нужного числа пользователю.
•	Можно узнать сколько сейчас заряжено патронов.
•	Можно узнать заряжен он или разряжен.
	Создайте пистолет вместимостью 7, зарядите три патрона, выстрелите из него пять раз, затем зарядите в него 8 патронов, выстрелите еще 2 раза, разрядите его,
		сделайте контрольный выстрел.
	Если все выполнено верно, то должно быть выведено: Бах! Бах! Бах! Клац! Клац! Бах! Бах! Клац!
 */

package pistol;

// Класс для создания сущностей Pistol.
class Pistol {
	int ammo;		// количество патронов
	final int max;	// объем магазина
	int stock;		// количество патронов в запасе (не в магазине) 
	
	// Конструктор класса для создания сущности с указанием начального количества патронов.
	Pistol (int ammo, int max) {
		this.ammo = ammo;
		this.max = max;
	}
	
	// Конструктор класса для создания сущности с изначально заданным количества патронов.
	Pistol (int max) {
		ammo = 5;
		this.max = max;
	}
	
	// Метод проверки вместимости магазина.
	void CheckMax() {
		System.out.println("Магазин вмещает " + max + " патронов.");
	}
	
	// Метод перезарядки пистолета.
	void Reload(int a) {
		if (a < 0) {
			throw new IllegalArgumentException("Ammo count must be positive!");
		}
		
		ammo += max - ammo;
		a -= ammo;
		
		// Возврат лишних патронов.
		if (a > 0) {
			stock += a;
		}
	}
	
	// Метод разряжения пистолета.
	void Unload() {
		ammo = 0;			
		stock += ammo;
	} 
	
	// Метод проверки патронов в магазине.
	void CheckAmmo() {
		System.out.println("Сейчас в магазине " + ammo + " патронов.");
	}
	
	
	// Метод проверки, заряжен ли пистолет.
	void Check() {
		if (ammo > 0) {
			System.out.println("Пистолет заряжен");
		} else {
			System.out.println("Пистолет разряжен");
		}
	}
	
	// Метод выстрела из пистолета.
	void Shot () {
		if (ammo > 0) {
			System.out.println("Бах!");
			ammo--;
		} else {
			System.out.println("Клац!");
		}
	}
}

public class Program {

	public static void main(String[] args) {
		Pistol p = new Pistol(3, 7);
		p.Shot();
		p.Shot();
		p.Shot();
		p.Shot();
		p.Shot();
		
		p.Reload(8);
		p.Shot();
		p.Shot();
		
		p.Unload();
		p.Shot();
	}

}
