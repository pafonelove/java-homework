/*
	Ќеобходимо разработать сущность ћузыкальный “рек, котора€ описываетс€ названием, автором и альбомом, к которому данный трек относитс€, 
		причем альбом описываетс€ названием и автором. Ѕудем считать, что автор альбома - это автор всех песен, однако у него могут быть соавторы,
		которые указываютс€ непосредственно в треках. Ћюбой трек может быть приведен к строке вида: УЌазвание, авторы: јвтор1, јвтор 2Ф, 
		либо  УЌазвание, автор: јвтор1Ф. 
	Ќеобходимо гарантировать, что име€ ссылку на трек, можно получить доступ ко всем трекам того же альбома, к которому относитс€ текущий трек. 
	“ак же гарантируйте что каждый трек может встречатьс€ только в одном альбоме и не должно быть способа изменить это.
	¬ыполнить следующие задачи:
Х		—оздать альбомы У укловодФ, автор УћеталловФ и УЎоссе к ќќѕФ, автор УјсидФ
Х		—оздать песни: У—осто€ние объектовФ, автор УянгФ, УЎоссе к ќќѕФ без автора, Уќдноразовый программистФ, автор УЅертонФ. 
Х		¬ключить первые две песни в альбом УЎоссе к ќќѕФ, а последнюю в альбом У укловодФ.
Х		¬ывести на экран все три песни и проверить наличие всех авторов в песн€х.
Х		¬ыведите все треки альбома УЎоссе к ќќѕФ име€ ссылку на трек У—осто€ние объектовФ.

 */


// ƒќ–јЅќ“ј“№ ѕ”Ќ “џ — »Ќ јѕ—”Ћя÷»≈… » ѕќ—Ћ≈ƒЌ»ћ «јƒјЌ»≈ћ!!!

package songs;
import java.util.ArrayList;

//  ласс дл€ создани€ сущностей Track.
final class Track {
	String Name;		// название трека
	String Author;		// им€ автора
	String CoAuthor;	// им€ соавтора
	Album A;			// альбом
	
	//  онструктор класса дл€ создани€ сущности с указанием названи€ трека и альбома.
	Track(String n, Album a) {
		Name = n;
		Author = a.Author;
		A = a;
	}
	
	//  онструктор класса дл€ создани€ сущности с указанием названи€ трека, его автора и альбома.
	Track(String name, String coAuthor, Album a) {
		Name = name;
		Author = a.Author;
		CoAuthor = coAuthor;
		A = a;
	}
	
	// ћетод приведени€ к строке.
	public String toString() { 
		if (A != null) {
			return Name + ", " + "авторы: " + Author + ", "+ CoAuthor + ", " + A.Name + " " + A.Author;
		}
		
		return Name + ", " + "автор: " + Author;
	}
	
	public void showTracks() {
		System.out.println(A.Name);
	}
}

//  ласс дл€ создани€ сущностей Album.
class Album {
	String Name;	// название альбома
	String Author;	// автор альбома
	
	Album (String n, String a) {
		Name = n;
		Author = a;
	}
}

public class Program {

	public static void main(String[] args) {
		Album a1 = new Album (" укловод", "ћеталлов");
		Album a2 = new Album ("Ўоссе к ќќѕ", "јсид");
		
		ArrayList <Track> tracks = new ArrayList <Track>();
//		
		Track t1 = new Track ("—осто€ние объектов", "янг", a2);
		Track t2 = new Track ("Ўоссе к ќќѕ", a2);
		Track t3 = new Track ("ќдноразовый программист", "Ѕертон", a1);
		tracks.add(t1);
		tracks.add(t2);
		tracks.add(t3);
		System.out.println(tracks);
		
//		System.out.println(t1);
//		System.out.println(t2);
//		System.out.println(t3);
		
		t1.showTracks();
		
//		System.out.println(t1.A);
	}
}
